import java.util.*;
class Solution {
    public int solution(int[][] maps) {
        int n = maps.length;
        int m = maps[0].length;
        int[][] copymap = new int[n][m];
        int[] dx = {-1,1,0,0};
        int[] dy = {0,0,-1,1};
        Queue<int[]> q = new LinkedList<>();
        q.add(new int[]{0,0});
        while (!q.isEmpty()){
            int[] p = q.poll();
            int x = p[0];
            int y = p[1];
            for (int i = 0; i <4; i++) {
                int nx = x+dx[i];
                int ny = y +dy[i];
                if(nx<0||ny<0||nx>=n||ny>=m||maps[nx][ny]==0)continue;
                if(copymap[nx][ny]==0){
                    q.add(new int[]{nx,ny});
                    copymap[nx][ny]=copymap[x][y]+1;
                }
            }
        }
        return copymap[n-1][m-1]==0 ? -1 : copymap[n-1][m-1]+1;
    }
}